/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectofincurso;


import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import proyectofincurso.clases.ConectBD;
import proyectofincurso.clases.UsuarioConectado;

/**
 *
 * @author Usuario
 */
public class Asignar_Servicio extends javax.swing.JFrame {
    private Connection c=ConectBD.Conexion();
    private DefaultTableModel modS=new DefaultTableModel();
    
    private String id,E,C,Cli,FI,HI,FF,HF,TE;
    private int idn, idT=UsuarioConectado.idU;
    /**
     * Creates new form Asignar_Servicio
     */
    public Asignar_Servicio() {
        initComponents();
        
        Tabla.setModel(modS);
        String titulosS[]={"Servicio","Compa√±ia","Cliente","Establecimiento","Fecha de inicio","Hora de inicio"};
        modS.setColumnIdentifiers(titulosS);
        try{   
            Statement s= c.createStatement();
            ResultSet r= s.executeQuery("SELECT nombre, apellido1 FROM trabajadores WHERE id_trabajador="+idT);
            while(r.next()){
                lab.setText("Asignar servicio para "+r.getString(1)+" "+r.getString(2));
            }
            ResultSet a= s.executeQuery("SELECT s.*\n" +
                "FROM servicios s\n" +
                "WHERE s.id_servicio NOT IN (\n" +
                "    SELECT j.id_servicio\n" +
                "    FROM jornadas j\n" +
                ");");                  
            while (a.next()){
                idn=a.getInt(1);
                id=Integer.toString(idn);
                C=a.getString(2);
                Cli=a.getString(3);
                E=a.getString(4);
                FI=a.getString(5);
                HI=a.getString(6);
                
                String row[]={id,C,Cli,E,FI,HI};
                modS.addRow(row);
                }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error en la BD");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        lab = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnFiltro = new javax.swing.JButton();
        ChYAsig = new javax.swing.JCheckBox();
        ChTodos = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tabla);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 760, 240));

        lab.setText("Asignar servicio para NOMBRE APELLIDOS ");
        getContentPane().add(lab, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, -1, -1));

        jButton1.setText("Asignar");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 310, 80, 30));

        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 80, 30));

        btnFiltro.setText("Filtrar");
        btnFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltroActionPerformed(evt);
            }
        });
        getContentPane().add(btnFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

        ChYAsig.setText("Ya asignados");
        getContentPane().add(ChYAsig, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));

        ChTodos.setText("Todos");
        getContentPane().add(ChTodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
        Compania i=new Compania();
        i.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltroActionPerformed
        if(ChTodos.isSelected()==true||(ChTodos.isSelected()==true&&ChYAsig.isSelected()==true)){
            try{
                modS.setRowCount(0);
                Statement s= c.createStatement();
                ResultSet a= s.executeQuery("SELECT s.*\n" +
                    "FROM servicios s\n" +
                    "WHERE s.terminado = FALSE\n" +
                    "AND s.id_servicio NOT IN (\n" +
                    "    SELECT j.id_servicio\n" +
                    "    FROM jornadas j\n" +
                    "    WHERE j.id_trabajador ="+idT+");");
                while (a.next()){
                    idn=a.getInt(1);
                    id=Integer.toString(idn);
                    C=a.getString(2);
                    Cli=a.getString(3);
                    E=a.getString(4);
                    FI=a.getString(5);
                    HI=a.getString(6);
                    
                    String row[]={id,C,Cli,E,FI,HI};
                    modS.addRow(row);
                }
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null, "Error en la BD");
            }
        }
        else
            if(ChYAsig.isSelected()==true){
                try{
                modS.setRowCount(0);
                Statement s= c.createStatement();
                ResultSet a= s.executeQuery("SELECT DISTINCT s.*\n" +
                    "FROM servicios s\n" +
                    "WHERE s.terminado = FALSE\n" +
                    "  AND EXISTS (\n" +
                    "      SELECT 1\n" +
                    "      FROM jornadas j\n" +
                    "      WHERE j.id_servicio = s.id_servicio\n" +
                    "  )\n" +
                    "  AND NOT EXISTS (\n" +
                    "      SELECT 1\n" +
                    "      FROM jornadas j\n" +
                    "      WHERE j.id_servicio = s.id_servicio\n" +
                    "        AND j.id_trabajador ="+idT+");");
                while (a.next()){
                    idn=a.getInt(1);
                    id=Integer.toString(idn);
                    C=a.getString(2);
                    Cli=a.getString(3);
                    E=a.getString(4);
                    FI=a.getString(5);
                    HI=a.getString(6);
                    
                    String row[]={id,C,Cli,E,FI,HI};
                    modS.addRow(row);
                }
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null, "Error en la BD");
            }
            }
            else{
                try{   
                    Statement s= c.createStatement();
                    ResultSet r= s.executeQuery("SELECT nombre, apellido1 FROM trabajadores WHERE id_trabajador="+idT);
                    while(r.next()){
                        lab.setText("Asignar servicio para "+r.getString(1)+" "+r.getString(2));
                    }
                    ResultSet a= s.executeQuery("SELECT s.*\n" +
                        "FROM servicios s\n" +
                        "WHERE s.id_servicio NOT IN (\n" +
                        "    SELECT j.id_servicio\n" +
                        "    FROM jornadas j\n" +
                        ");");                  
                    while (a.next()){
                        idn=a.getInt(1);
                        id=Integer.toString(idn);
                        C=a.getString(2);
                        Cli=a.getString(3);
                        E=a.getString(4);
                        FI=a.getString(5);
                        HI=a.getString(6);

                        String row[]={id,C,Cli,E,FI,HI};
                        modS.addRow(row);
                        }
                }
                catch(SQLException ex){
                    JOptionPane.showMessageDialog(null, "Error en la BD");
                }
            }
    }//GEN-LAST:event_btnFiltroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Asignar_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Asignar_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Asignar_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Asignar_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Asignar_Servicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ChTodos;
    private javax.swing.JCheckBox ChYAsig;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton btnFiltro;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lab;
    // End of variables declaration//GEN-END:variables
}
