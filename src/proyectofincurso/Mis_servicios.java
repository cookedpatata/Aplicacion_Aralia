/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectofincurso;

import java.awt.Dimension;
import proyectofincurso.clases.ConectBD;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;
import proyectofincurso.clases.UsuarioConectado;

/**
 *
 * @author DAW
 */
public class Mis_servicios extends javax.swing.JFrame {
    DefaultTableModel mod=new DefaultTableModel();
    
    DefaultListModel ListTrab=new DefaultListModel();
    DefaultListModel ListTrabSelec=new DefaultListModel();
    
    DefaultListModel ListEstab=new DefaultListModel();
    DefaultListModel ListEstabSelec=new DefaultListModel();
    
    public int BtnSelec(JToggleButton b1, JToggleButton b2, JToggleButton b3, JToggleButton b4){
        int c=0;
        if(b1.isSelected())
            c++;
        if(b2.isSelected())
            c++;
        if(b3.isSelected())
            c++;
        if(b4.isSelected())
            c++;
        return c;     
    }
    /**
     * Creates new form Mis_servicios
     */
    public Mis_servicios() {

        setLocation(800,400);
        initComponents();
        PEstab.setVisible(false);
        PFechas.setVisible(false);
        PHoras.setVisible(false);
        PTrab.setVisible(false);
        
        ListEstab1.setModel(ListEstab);
        ListEstab2.setModel(ListEstabSelec);
        
        ListTrab1.setModel(ListTrab);
        ListTrab2.setModel(ListTrabSelec);
        
        BtnRdHoras.add(RdHEsp);
        BtnRdHoras.add(RdHVar);
        
        try{
            String id,E,FI,HI,FF,HF,TR,TE;
            int idn;
            
            Connection c = ConectBD.Conexion();
            
            int idU=UsuarioConectado.idU;
            
            //tabla
            String titulosC[]={"Servicio","Establecimiento","Fecha de inicio","Hora de inicio","Fecha de terminado","Hora de terminado","Trabajos","Terminado"};
            mod.setColumnIdentifiers(titulosC);
            Tabla.setModel(mod);
            Tabla.setPreferredScrollableViewportSize(new Dimension(700, 150));
            
            String sql="SELECT s.id_servicio,e.direccion,s.fecha_inicio,s.hora_inicio,s.fecha_fin,s.hora_fin,t.nombre,s.terminado FROM servicios s\n" +
                        "JOIN establecimientos e ON s.id_establecimiento = e.id_establecimiento\n" +
                        "JOIN labores l ON s.id_servicio = l.id_servicio\n" +
                        "JOIN trabajos t ON l.id_trabajo = t.id_trabajo\n" +
                        "WHERE s.id_cliente ="+idU+";";                
            Statement s= c.createStatement();
            ResultSet a= s.executeQuery(sql);
            
            while (a.next()){
                idn=a.getInt(1);
                id=Integer.toString(idn);
                E=a.getString(2);
                FI=a.getString(3);
                HI=a.getString(4);
                if(a.getString(5)!=null){
                    FF=a.getString(5);
                    HF=a.getString(6);
                }
                else{
                    FF="----------------";
                    HF="---:---:---";
                }
                TR=a.getString(7);
                TE=a.getString(8);
                if("1".equals(TE))
                    TE="SI";
                else
                    TE="NO";
                
                String row[]={id,E,FI,HI,FF,HF,TR,TE};
                mod.addRow(row);
            }
            
            //lista establecimientos
            sql="SELECT direccion FROM establecimientos WHERE id_cliente="+idU+";";
            s= c.createStatement();
            a= s.executeQuery(sql);
            
            while(a.next()){
                Object Trab=a.getString(1);
                ListEstab.addElement(Trab);
            }
            //Lista trabajos
            sql="SELECT nombre FROM trabajos;";
            s= c.createStatement();
            a= s.executeQuery(sql);
            
            while(a.next()){
                Object Trab=a.getString(1);
                ListTrab.addElement(Trab);
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, "error en la BD");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnRdHoras = new javax.swing.ButtonGroup();
        BtnRdTer = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        volver = new javax.swing.JButton();
        btnFiltrar = new javax.swing.JButton();
        PHoras = new javax.swing.JPanel();
        CBH0 = new javax.swing.JComboBox<>();
        CBH2 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        CBH1 = new javax.swing.JComboBox<>();
        RdHEsp = new javax.swing.JRadioButton();
        RdHVar = new javax.swing.JRadioButton();
        PFechas = new javax.swing.JPanel();
        CBDia1 = new javax.swing.JComboBox<>();
        CBMes1 = new javax.swing.JComboBox<>();
        CBA単o1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CBDia2 = new javax.swing.JComboBox<>();
        CBMes2 = new javax.swing.JComboBox<>();
        CBA単o2 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        PTrab = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ListTrab2 = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        ListTrab1 = new javax.swing.JList<>();
        btnA単adTrab = new javax.swing.JButton();
        btnQuitTrab = new javax.swing.JButton();
        PEstab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListEstab2 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListEstab1 = new javax.swing.JList<>();
        btnA単adEstab = new javax.swing.JButton();
        btnQuitEstab = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        btnTrabajos = new javax.swing.JToggleButton();
        btnHoras = new javax.swing.JToggleButton();
        btnFecha = new javax.swing.JToggleButton();
        btnEstablecimientos = new javax.swing.JToggleButton();
        chkF = new javax.swing.JCheckBox();
        chkNF = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Mis servicios");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, -1, -1));

        volver.setText("Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });
        getContentPane().add(volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        btnFiltrar.setText("Filtrar");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 50, -1, -1));

        PHoras.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PHoras.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CBH0.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<hora0>", "00:00  ", "00:30  ", "01:00  ", "01:30  ", "02:00  ", "02:30  ", "03:00  ", "03:30  ", "04:00  ", "04:30  ", "05:00  ", "05:30  ", "06:00  ", "06:30  ", "07:00  ", "07:30  ", "08:00  ", "08:30  ", "09:00  ", "09:30  ", "10:00  ", "10:30  ", "11:00  ", "11:30  ", "12:00  ", "12:30  ", "13:00  ", "13:30  ", "14:00  ", "14:30  ", "15:00  ", "15:30  ", "16:00  ", "16:30  ", "17:00  ", "17:30  ", "18:00  ", "18:30  ", "19:00  ", "19:30  ", "20:00  ", "20:30  ", "21:00  ", "21:30  ", "22:00  ", "22:30  ", "23:00  ", "23:30  ", "24:00" }));
        PHoras.add(CBH0, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        CBH2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<hora2>", "00:00  ", "00:30  ", "01:00  ", "01:30  ", "02:00  ", "02:30  ", "03:00  ", "03:30  ", "04:00  ", "04:30  ", "05:00  ", "05:30  ", "06:00  ", "06:30  ", "07:00  ", "07:30  ", "08:00  ", "08:30  ", "09:00  ", "09:30  ", "10:00  ", "10:30  ", "11:00  ", "11:30  ", "12:00  ", "12:30  ", "13:00  ", "13:30  ", "14:00  ", "14:30  ", "15:00  ", "15:30  ", "16:00  ", "16:30  ", "17:00  ", "17:30  ", "18:00  ", "18:30  ", "19:00  ", "19:30  ", "20:00  ", "20:30  ", "21:00  ", "21:30  ", "22:00  ", "22:30  ", "23:00  ", "23:30  ", "24:00" }));
        PHoras.add(CBH2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, -1, -1));

        jLabel6.setText("A");
        PHoras.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, -1, -1));

        CBH1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<hora1>", "00:00  ", "00:30  ", "01:00  ", "01:30  ", "02:00  ", "02:30  ", "03:00  ", "03:30  ", "04:00  ", "04:30  ", "05:00  ", "05:30  ", "06:00  ", "06:30  ", "07:00  ", "07:30  ", "08:00  ", "08:30  ", "09:00  ", "09:30  ", "10:00  ", "10:30  ", "11:00  ", "11:30  ", "12:00  ", "12:30  ", "13:00  ", "13:30  ", "14:00  ", "14:30  ", "15:00  ", "15:30  ", "16:00  ", "16:30  ", "17:00  ", "17:30  ", "18:00  ", "18:30  ", "19:00  ", "19:30  ", "20:00  ", "20:30  ", "21:00  ", "21:30  ", "22:00  ", "22:30  ", "23:00  ", "23:30  ", "24:00" }));
        PHoras.add(CBH1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        RdHEsp.setText("Especifica");
        PHoras.add(RdHEsp, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        RdHVar.setText("Variante");
        PHoras.add(RdHVar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        getContentPane().add(PHoras, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 290, 70));

        PFechas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PFechas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CBDia1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Dia>", "1  ", "2  ", "3  ", "4  ", "5  ", "6  ", "7  ", "8  ", "9  ", "10  ", "11  ", "12  ", "13  ", "14  ", "15  ", "16  ", "17  ", "18  ", "19  ", "20  ", "21  ", "22  ", "23  ", "24  ", "25  ", "26  ", "27  ", "28  ", "29  ", "30  ", "31" }));
        CBDia1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBDia1ActionPerformed(evt);
            }
        });
        PFechas.add(CBDia1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        CBMes1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Mes>", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        CBMes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBMes1ActionPerformed(evt);
            }
        });
        PFechas.add(CBMes1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        CBA単o1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<A単o>", "2025  ", "2026  ", "2027  ", "2028  ", "2029  ", "2030  ", "2031  ", "2032  ", "2033  ", "2034  ", "2035  ", "2036  ", "2037  ", "2038  ", "2039  ", "2040  ", "2041  ", "2042  ", "2043  ", "2044  ", "2045  ", "2046  ", "2047  ", "2048  ", "2049  ", "2050" }));
        PFechas.add(CBA単o1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("de");
        PFechas.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("de");
        PFechas.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Del");
        PFechas.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        CBDia2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Dia>", "1  ", "2  ", "3  ", "4  ", "5  ", "6  ", "7  ", "8  ", "9  ", "10  ", "11  ", "12  ", "13  ", "14  ", "15  ", "16  ", "17  ", "18  ", "19  ", "20  ", "21  ", "22  ", "23  ", "24  ", "25  ", "26  ", "27  ", "28  ", "29  ", "30  ", "31" }));
        CBDia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBDia2ActionPerformed(evt);
            }
        });
        PFechas.add(CBDia2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        CBMes2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Mes>", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        CBMes2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBMes2ActionPerformed(evt);
            }
        });
        PFechas.add(CBMes2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, -1));

        CBA単o2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<A単o>", "2025  ", "2026  ", "2027  ", "2028  ", "2029  ", "2030  ", "2031  ", "2032  ", "2033  ", "2034  ", "2035  ", "2036  ", "2037  ", "2038  ", "2039  ", "2040  ", "2041  ", "2042  ", "2043  ", "2044  ", "2045  ", "2046  ", "2047  ", "2048  ", "2049  ", "2050" }));
        PFechas.add(CBA単o2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("de");
        PFechas.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, -1, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("de");
        PFechas.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("al");
        PFechas.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        getContentPane().add(PFechas, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 340, 80));

        PTrab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PTrab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane4.setViewportView(ListTrab2);

        PTrab.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 130, 140));

        jScrollPane5.setViewportView(ListTrab1);

        PTrab.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 130, 140));

        btnA単adTrab.setText("A単adir");
        btnA単adTrab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnA単adTrabActionPerformed(evt);
            }
        });
        PTrab.add(btnA単adTrab, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, -1));

        btnQuitTrab.setText("Quitar");
        btnQuitTrab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitTrabActionPerformed(evt);
            }
        });
        PTrab.add(btnQuitTrab, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, -1, -1));

        getContentPane().add(PTrab, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, 340, 160));

        PEstab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PEstab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setViewportView(ListEstab2);

        PEstab.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 130, 140));

        jScrollPane3.setViewportView(ListEstab1);

        PEstab.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 130, 140));

        btnA単adEstab.setText("A単adir");
        btnA単adEstab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnA単adEstabActionPerformed(evt);
            }
        });
        PEstab.add(btnA単adEstab, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, -1));

        btnQuitEstab.setText("Quitar");
        btnQuitEstab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitEstabActionPerformed(evt);
            }
        });
        PEstab.add(btnQuitEstab, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, -1, -1));

        getContentPane().add(PEstab, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 340, 160));

        jScrollPane7.setRequestFocusEnabled(false);
        jScrollPane7.setVerifyInputWhenFocusTarget(false);

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Tabla.setEnabled(false);
        jScrollPane7.setViewportView(Tabla);

        jScrollPane1.setViewportView(jScrollPane7);

        jLayeredPane1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 1030, 400);

        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 1030, 420));

        btnTrabajos.setText("Trabajos");
        btnTrabajos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrabajosActionPerformed(evt);
            }
        });
        getContentPane().add(btnTrabajos, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, -1, -1));

        btnHoras.setText("Horas");
        btnHoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHorasActionPerformed(evt);
            }
        });
        getContentPane().add(btnHoras, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 70, -1));

        btnFecha.setText("Fecha");
        btnFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFechaActionPerformed(evt);
            }
        });
        getContentPane().add(btnFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 70, -1));

        btnEstablecimientos.setText("Establecimientos");
        btnEstablecimientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstablecimientosActionPerformed(evt);
            }
        });
        getContentPane().add(btnEstablecimientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, -1, -1));

        chkF.setText("Finalizado");
        getContentPane().add(chkF, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, -1, -1));

        chkNF.setText("No finalizado");
        getContentPane().add(chkNF, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        dispose();
        Cliente C=new Cliente();
        C.setVisible(true);
    }//GEN-LAST:event_volverActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        //comprobamos que filtros que quieren aplicar
        int idU=UsuarioConectado.idU;
        String sql="SELECT s.id_servicio,e.direccion,s.fecha_inicio,s.hora_inicio,s.fecha_fin,s.hora_fin,t.nombre,s.terminado FROM servicios s\n" +
                        "JOIN establecimientos e ON s.id_establecimiento = e.id_establecimiento\n" +
                        "JOIN labores l ON s.id_servicio = l.id_servicio\n" +
                        "JOIN trabajos t ON l.id_trabajo = t.id_trabajo\n" +
                        "WHERE s.id_cliente ="+idU+"\n";
        //Horas
        if(RdHEsp.isSelected()){//cualquiera de los selcted para horas
            if (CBH0.getSelectedIndex()!=1){
                int he=1;
                String H0= (String) CBH0.getSelectedItem();
                sql=sql+"AND s.hora_inicio ='"+H0.trim()+"'\n";
            }
        }
        else
        if (RdHVar.isSelected()){
            if((CBH1.getSelectedIndex()!=1)&&(CBH2.getSelectedIndex()!=1)){
                int hv=1;
                String H1= (String) CBH1.getSelectedItem();
                String H2= (String) CBH2.getSelectedItem();
                sql=sql+"AND s.hora_inicio BETWEEN '"+H1.trim()+"' AND '"+H2.trim()+"'\n";
            } 
        }
        //Fechas
        int Idia1, Imes1, Ia単o1, f = 0; 
        Idia1= CBDia1.getSelectedIndex();
        Imes1= CBMes1.getSelectedIndex();
        Ia単o1= CBA単o1.getSelectedIndex();
        int I1[]={Idia1,Imes1,Ia単o1};
        
        for(int i=0;i<3;i++){//CBoxFecha1 seleccionados
            if(I1[i]!=0)
                f++;
        }
        if(f==3){//f>0 para fechas
            String D1,M1,A1;
            D1= (String) CBDia1.getSelectedItem();
            M1= (String) CBMes1.getSelectedItem();
            A1= (String) CBA単o1.getSelectedItem();
            String F1[]={A1,M1,D1};
            String Fecha1="'"; 
            for(int i=0;i<3;i++){ //fecha_inicio1
                if(i==2){
                    Fecha1=Fecha1+F1[i].trim()+"'";
                }
                else
                    Fecha1=Fecha1+F1[i].trim()+"-";
            }
            
            int Idia2, Imes2, Ia単o2; 
            Idia2= CBDia2.getSelectedIndex();
            Imes2= CBMes2.getSelectedIndex();
            Ia単o2= CBA単o2.getSelectedIndex();
            int I2[]={Idia2,Imes2,Ia単o2};
            for(int i=0;i<3;i++){//CBoxFecha2 seleccionados
            if(I2[i]!=0)
                f++;
            }
            if(f==6){
                String D2,M2,A2;
                D2= (String) CBDia2.getSelectedItem();
                M2= (String) CBMes2.getSelectedItem();
                A2= (String) CBA単o2.getSelectedItem();
                String F2[]={A2,M2,D2};
                String Fecha2="'"; 
                for(int i=0;i<3;i++){ //fecha_inicio2
                    if(i==2){
                        Fecha2=Fecha2+F2[i].trim()+"'";
                    }
                    else
                        Fecha2=Fecha2+F2[i].trim()+"-";
                }
                //ambas fechas
                sql=sql+"AND s.fecha_inicio BETWEEN "+Fecha1+" AND "+Fecha2+"\n";
                System.out.println(Fecha1);
                System.out.println(Fecha2);
            }
            else{
                //solo una fecha
                sql=sql+"AND s.fecha_inicio = "+Fecha1+"\n";
                System.out.println(Fecha1); 
            }
            
        } 
        //establecimientos
        //comprobar que haya seleccionado algo
        int numEstab=ListEstabSelec.size();
        if(numEstab>0){
            //obtener los objetos seleccionados
            String EstabSelec[]= new String [numEstab];
            for(int i=0; i<numEstab;i++){
                EstabSelec[i]=(String) ListEstabSelec.getElementAt(i);
            }
            sql=sql+"AND e.direccion IN (";
            for(int i=0;i<numEstab;i++){
                if(i!=numEstab-1)
                    sql=sql+"'"+EstabSelec[i].trim()+"',";
                else
                    sql=sql+"'"+EstabSelec[i].trim()+"'";
            }
            sql=sql+")";       
        }
        //trabajos
        int numTrab=ListTrabSelec.size();
        if(numTrab>0){
            //obtener los objetos seleccionados
            String TrabSelec[]= new String [numTrab];
            for(int i=0; i<numTrab;i++){
                TrabSelec[i]=(String) ListTrabSelec.getElementAt(i);
            }       
            sql=sql+"AND t.nombre IN (";
            for(int i=0;i<numTrab;i++){
                if(i!=numTrab-1)
                    sql=sql+"'"+TrabSelec[i].trim()+"',";
                else
                    sql=sql+"'"+TrabSelec[i].trim()+"'";
            }
            sql=sql+")\n";
        }
        //terminados
        if(chkF.isSelected()||chkNF.isSelected()){
            if(chkF.isSelected()&&chkNF.isSelected())
                sql=sql;
            else
                if(chkF.isSelected()&&!chkNF.isSelected())
                    sql=sql+"AND s.terminado=1";
            else
                    sql=sql+"AND s.terminado=0";
        }       
        //comprobamos los filtros seleccionados
        try{
            Connection c=ConectBD.Conexion();
            Statement s= c.createStatement();
            String id,E,FI,HI,FF,HF,TR,TE;
            int idn;
            
            if((f>0)||(RdHEsp.isSelected())||(RdHVar.isSelected())||(numEstab>0)||(numTrab>0)||(chkF.isSelected())||(chkNF.isSelected())){ 
                System.out.println(sql);
                mod.setRowCount(0);
                sql=sql+";";        
                ResultSet a= s.executeQuery(sql);
                
                
                while (a.next()){
                idn=a.getInt(1);
                id=Integer.toString(idn);
                E=a.getString(2);
                FI=a.getString(3);
                HI=a.getString(4);
                if(a.getString(5)!=null){
                    FF=a.getString(5);
                    HF=a.getString(6);
                }
                else{
                    FF="----------------";
                    HF="---:---:---";
                }
                TR=a.getString(7);
                TE=a.getString(8);
                if("1".equals(TE))
                    TE="SI";
                else
                    TE="NO";
                
                String row[]={id,E,FI,HI,FF,HF,TR,TE};
                mod.addRow(row);
            }  
            }
            else{
                mod.setRowCount(0);
                sql="SELECT s.id_servicio,e.direccion,s.fecha_inicio,s.hora_inicio,s.fecha_fin,s.hora_fin,t.nombre,s.terminado FROM servicios s\n" +
                        "JOIN establecimientos e ON s.id_establecimiento = e.id_establecimiento\n" +
                        "JOIN labores l ON s.id_servicio = l.id_servicio\n" +
                        "JOIN trabajos t ON l.id_trabajo = t.id_trabajo\n" +
                        "WHERE s.id_cliente ="+idU+";";               
                ResultSet a= s.executeQuery(sql);
                
                while (a.next()){
                idn=a.getInt(1);
                id=Integer.toString(idn);
                E=a.getString(2);
                FI=a.getString(3);
                HI=a.getString(4);
                if(a.getString(5)!=null){
                    FF=a.getString(5);
                    HF=a.getString(6);
                }
                else{
                    FF="----------------";
                    HF="---:---:---";
                }
                TR=a.getString(7);
                TE=a.getString(8);
                if("1".equals(TE))
                    TE="SI";
                else
                    TE="NO";
                
                String row[]={id,E,FI,HI,FF,HF,TR,TE};
                mod.addRow(row);
                }
            }
        }
        catch(SQLException se){
                    JOptionPane.showMessageDialog(null, "Error en la BD");
                }    
        
        System.out.println(sql);
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void CBDia1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBDia1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBDia1ActionPerformed

    private void CBMes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBMes1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBMes1ActionPerformed

    private void CBDia2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBDia2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBDia2ActionPerformed

    private void CBMes2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBMes2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBMes2ActionPerformed

    private void btnHorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHorasActionPerformed
        if(BtnSelec(btnFecha, btnEstablecimientos, btnHoras, btnTrabajos)==1){
            if(btnHoras.isSelected()){
                PHoras.setVisible(true);
            }
        }
        else{
            btnHoras.setSelected(false);
            PHoras.setVisible(false);
        }           
    }//GEN-LAST:event_btnHorasActionPerformed

    private void btnFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFechaActionPerformed
        if(BtnSelec(btnFecha, btnEstablecimientos, btnHoras, btnTrabajos)==1){
            if(btnFecha.isSelected())
                PFechas.setVisible(true);
        }
        else{
            btnFecha.setSelected(false);
            PFechas.setVisible(false);
        }        
    }//GEN-LAST:event_btnFechaActionPerformed

    private void btnEstablecimientosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstablecimientosActionPerformed
        if(BtnSelec(btnFecha, btnEstablecimientos, btnHoras, btnTrabajos)==1){
            if(btnEstablecimientos.isSelected())
                PEstab.setVisible(true);
        }
        else{
            btnEstablecimientos.setSelected(false);
            PEstab.setVisible(false);
        }         
    }//GEN-LAST:event_btnEstablecimientosActionPerformed

    private void btnTrabajosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrabajosActionPerformed
        if(BtnSelec(btnFecha, btnEstablecimientos, btnHoras, btnTrabajos)==1){
            if(btnTrabajos.isSelected())
                PTrab.setVisible(true);
        }
        else{
            btnTrabajos.setSelected(false);
            PTrab.setVisible(false);
        }          
    }//GEN-LAST:event_btnTrabajosActionPerformed

    private void btnA単adTrabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnA単adTrabActionPerformed
        String Trab1,Trab2;
        int s=ListTrabSelec.size(),c = 0;
        String Trabs []= new String [s]; 
        Trab1=(String)ListTrab1.getSelectedValue();//elemento q intentamos a単adir
        
        if(s>0){ //ya hay al menos un elemento a単adido
            for(int i=0;i!=s;i++){
                Trab2=(String)ListTrabSelec.getElementAt(i);
                Trabs[i]=Trab2;//obtenemos los elementos q ya esten en la otra lista
            }
            for(int i=0;i!=s;i++){
                if(Trabs[i].equals(Trab1))//comprobamos si el elemento q intentamos a単adir ya esta a単adido
                    c++;//elemento coincidente
            }
            if(c>0){
            }
            else
                ListTrabSelec.addElement(Trab1);
        }
        else{
            ListTrabSelec.addElement(Trab1);
        }
    }//GEN-LAST:event_btnA単adTrabActionPerformed

    private void btnQuitTrabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitTrabActionPerformed
        int indice=ListTrab2.getSelectedIndex();
        
        try{
        ListTrabSelec.remove(indice); 
        }
        catch(IndexOutOfBoundsException ie){
        }
    }//GEN-LAST:event_btnQuitTrabActionPerformed

    private void btnA単adEstabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnA単adEstabActionPerformed
        String Estab1,Estab2;
        int s=ListEstabSelec.size(),c = 0;
        String Trabs []= new String [s]; 
        Estab1=(String)ListEstab1.getSelectedValue();//elemento q intentamos a単adir
        
        if(s>0){ //ya hay al menos un elemento a単adido
            for(int i=0;i!=s;i++){
                Estab2=(String)ListEstabSelec.getElementAt(i);
                Trabs[i]=Estab2;//obtenemos los elementos q ya esten en la otra lista
            }
            for(int i=0;i!=s;i++){
                if(Trabs[i].equals(Estab1))//comprobamos si el elemento q intentamos a単adir ya esta a単adido
                    c++;//elemento coincidente
            }
            if(c>0){
            }
            else
                ListEstabSelec.addElement(Estab1);
        }
        else{
            ListEstabSelec.addElement(Estab1);
        }
    }//GEN-LAST:event_btnA単adEstabActionPerformed

    private void btnQuitEstabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitEstabActionPerformed
        int indice=ListEstab2.getSelectedIndex();
        
        try{
        ListEstabSelec.remove(indice); 
        }
        catch(IndexOutOfBoundsException ie){
        }
    }//GEN-LAST:event_btnQuitEstabActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mis_servicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mis_servicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mis_servicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mis_servicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mis_servicios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BtnRdHoras;
    private javax.swing.ButtonGroup BtnRdTer;
    private javax.swing.JComboBox<String> CBA単o1;
    private javax.swing.JComboBox<String> CBA単o2;
    private javax.swing.JComboBox<String> CBDia1;
    private javax.swing.JComboBox<String> CBDia2;
    private javax.swing.JComboBox<String> CBH0;
    private javax.swing.JComboBox<String> CBH1;
    private javax.swing.JComboBox<String> CBH2;
    private javax.swing.JComboBox<String> CBMes1;
    private javax.swing.JComboBox<String> CBMes2;
    private javax.swing.JList<String> ListEstab1;
    private javax.swing.JList<String> ListEstab2;
    private javax.swing.JList<String> ListTrab1;
    private javax.swing.JList<String> ListTrab2;
    private javax.swing.JPanel PEstab;
    private javax.swing.JPanel PFechas;
    private javax.swing.JPanel PHoras;
    private javax.swing.JPanel PTrab;
    private javax.swing.JRadioButton RdHEsp;
    private javax.swing.JRadioButton RdHVar;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton btnA単adEstab;
    private javax.swing.JButton btnA単adTrab;
    private javax.swing.JToggleButton btnEstablecimientos;
    private javax.swing.JToggleButton btnFecha;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JToggleButton btnHoras;
    private javax.swing.JButton btnQuitEstab;
    private javax.swing.JButton btnQuitTrab;
    private javax.swing.JToggleButton btnTrabajos;
    private javax.swing.JCheckBox chkF;
    private javax.swing.JCheckBox chkNF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
